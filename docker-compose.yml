version: '3.4'

services:
  #SQL SERVER    
  mssql-server:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    environment:
      TZ: Europe/Rome
      ACCEPT_EULA: "Y"
      MSSQL_PID: Developer
      MSSQL_SA_PASSWORD: p4ssw0rD
    ports:
      - 2433:1433
    volumes:
      - "mssql-server:/var/opt/mssql"
  adminer:
    image: adminer:4.8.1
    ports:
      - 2431:8080
    environment:
      TZ: Europe/Rome
      ADMINER_DEFAULT_SERVER: mssql-server 
      
  #ZOOKEEPER
  zookeeper:
    container_name: zookeeper
    image: 'bitnami/zookeeper:3.9.0'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  #KAFKA
  kafka:
    container_name: kafka
    image: 'bitnami/kafka:3.1.0'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper

  # PROFILE
  sportlize.profile.api:
    container_name: api-sportlize-profile
    image: ${DOCKER_REGISTRY-}sportlizeprofile
    build:
        context: .
        dockerfile: src/SportLize.Profile.Api/Dockerfile
    depends_on:
        - kafka
        - mssql-server
    environment:
      TZ: Europe/Rome
    volumes:
      - "./config/sportlize-profile-appsettings.json:/app/appsettings.json:ro"

  # TALK
  sportlize.talk.api:
    container_name: api-sportlize-talk
    image: ${DOCKER_REGISTRY-}sportlizetalk
    build:
        context: .
        dockerfile: src/SportLize.Talk.Api/Dockerfile
    depends_on:
        - kafka
        - mssql-server
    environment:
      TZ: Europe/Rome
    volumes:
      - "./config/sportlize-talk-appsettings.json:/app/appsettings.json:ro"

  # TEAM
  sportlize.team.api:
    container_name: api-sportlize-team
    image: ${DOCKER_REGISTRY-}sportlizeteam
    build:
        context: .
        dockerfile: src/SportLize.Team.Api/Dockerfile
    depends_on:
        - kafka
        - mssql-server
    environment:
      TZ: Europe/Rome
    volumes:
      - "./config/sportlize-team-appsettings.json:/app/appsettings.json:ro"

  # FRONTEND
  sportlize.front.razor:
    image: ${DOCKER_REGISTRY-}sportlizefront
    build:
      context: .
      dockerfile: src/SportLize.Front.Razor/Dockerfile

volumes:
  mssql-server:
